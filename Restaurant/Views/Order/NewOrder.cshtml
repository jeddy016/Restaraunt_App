@model Restaurant.ViewModels.NewOrderViewModel
@using Restaurant.Enums

@{
    ViewBag.Title = "New Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/order-page.css")

<div class="row text-center">
    <h3>New Order</h3>
    @if (TempData["message"] != null)
    {
        <div>
            <span class="field-validation-error">@TempData["message"].ToString()</span>
        </div>
    }
</div>
@using (Html.BeginForm("BuildOrder", "Order", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-12">
            <h5 class="app-label">Appetizers</h5>
        </div>
        @for (var i = 0; i < Model.Items.Count; i++)
        {
            if (Model.Items[i].MenuItemTypeId == (int) MenuItem.APPETIZER)
             {
                 <div class="col-md-2 text-center app-item">
                     <p class="item-name">@Model.Items[i].Name</p>
                     <p>$@Model.Items[i].Price</p>
                     @Html.HiddenFor(m => m.Items[i].Price)
                     @Html.HiddenFor(m => m.Items[i].Name)
                     @Html.LabelFor(m => m.Items[i].Quantity)
                     @Html.TextBoxFor(m => m.Items[i].Quantity, new {type = "number", min = "0", @class = "quantity-input form-control"})
                 </div>
             }
        }
    </div>
    <div class="row">
        <div class="col-md-12">
            <hr />
            <h5 class="entree-label">Entrees</h5>
        </div>  
        @for (var i = 0; i < Model.Items.Count; i++)
        {
            if (Model.Items[i].MenuItemTypeId == (int) MenuItem.ENTREE)
            {
                <div class="col-md-2 text-center entree-item">
                    <p class="item-name">@Model.Items[i].Name</p>
                    <p>$@Model.Items[i].Price</p>
                    @Html.HiddenFor(m => m.Items[i].Price)
                    @Html.HiddenFor(m => m.Items[i].Name)
                    @Html.LabelFor(m => m.Items[i].Quantity)
                    @Html.TextBoxFor(m => m.Items[i].Quantity, new {type = "number", min = "0", @class = "quantity-input form-control"})
                </div>
            }
        }         
    </div>
    <div class="row">
        <div class="col-md-12">
            <hr />
            <h5 class="side-label">Sides</h5>
        </div>
        @for (var i = 0; i < Model.Items.Count; i++)
        {
            if (Model.Items[i].MenuItemTypeId == (int) MenuItem.SIDE)
            {
                <div class="col-md-2 text-center side-item">
                    <p class="item-name">@Model.Items[i].Name</p>
                    <p>$@Model.Items[i].Price</p>
                    @Html.HiddenFor(m => m.Items[i].Price)
                    @Html.HiddenFor(m => m.Items[i].Name)
                    @Html.LabelFor(m => m.Items[i].Quantity)
                    @Html.TextBoxFor(m => m.Items[i].Quantity, new {type = "number", min = "0", @class = "quantity-input form-control"})
                </div>
            }
        }
    </div>
    <div class="row">
        <div class="col-md-12">
            <hr />
            <h5 class="dessert-label">Desserts</h5>
        </div>
        @for (var i = 0; i < Model.Items.Count; i++)
        {
            if (Model.Items[i].MenuItemTypeId == (int) MenuItem.DESSERT)
            {
                <div class="col-md-2 text-center dessert-item">
                    <p class="item-name">@Model.Items[i].Name</p>
                    <p>$@Model.Items[i].Price</p>
                    @Html.HiddenFor(m => m.Items[i].Price)
                    @Html.HiddenFor(m => m.Items[i].Name)
                    @Html.LabelFor(m => m.Items[i].Quantity)
                    @Html.TextBoxFor(m => m.Items[i].Quantity, new {type = "number", min = "0", @class = "quantity-input form-control"})
                </div>
            }
        }
    </div>
    <div class="row">
        <div class="col-md-12">
            <hr />
            <h5 class="drink-label">Drinks</h5>
        </div>
        @for (var i = 0; i < Model.Items.Count; i++)
        {
            if (Model.Items[i].MenuItemTypeId == (int) MenuItem.DRINK)
            {
                <div class="col-md-2 text-center drink-item">
                    <p class="item-name">@Model.Items[i].Name</p>
                    <p>$@Model.Items[i].Price</p>
                    @Html.HiddenFor(m => m.Items[i].Price)
                    @Html.HiddenFor(m => m.Items[i].Name)
                    @Html.LabelFor(m => m.Items[i].Quantity)
                    @Html.TextBoxFor(m => m.Items[i].Quantity, new {type = "number", min = "0", @class = "quantity-input form-control"})
                </div>
            }
        }
    </div>
    <hr/>
    <div class="row">
        <div class="col-md-12 text-center">
            @Html.LabelFor(m => m.SelectedDiscount, new {@class = "discount-label"})
            @Html.DropDownListFor(m => m.SelectedDiscount, new SelectList(Model.Discounts, "Percentage", "Name"), "None", new {@class = "form-control"})
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <button type="submit" class="btn btn-block btn-primary review-btn">Review Order</button>
        </div>
    </div>
}
